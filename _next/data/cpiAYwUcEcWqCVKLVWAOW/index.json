{"pageProps":{"plasmicData":{"entryCompMetas":[{"id":"4DP6LCsF5DAEDS","usedComponents":["wk5D0GHQp4","l3_Kdwbw0M","NZJHqVnmkt","1MrXClCMmd","4KW2M5C9yK","03lXAatnPJTzGx","O0lNhygQRW","cLjzGEC-88","6uQrDgkoZk"],"projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"HomePage","renderFile":"render__4DP6LCsF5DAEDS.js","skeletonFile":"comp__4DP6LCsF5DAEDS.js","cssFile":"css__4DP6LCsF5DAEDS.css","path":"/","isPage":true,"entry":"render__4DP6LCsF5DAEDS.js","isCode":false}],"bundle":{"modules":[{"fileName":"comp__03lXAatnPJTzGx.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index-6cf1d5e9.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst _jsxFileName$1 = \"/tmp/tmp-36-msYReFMDyGTN/render__03lXAatnPJTzGx.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicMuiButton__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n\n\n\n\n\n    const PlasmicMuiButton__ArgProps = new Array(\"children\",\"disabled\",\"variant\",\"href\",\"color\",\"theme\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicMuiButton__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_mHWcK7NZcRAyb8v8MxSPJd\", \"MuiButton__root__ehque\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 97}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.children,\n      \n  }) \n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicMuiButton__ArgProps,\n          internalVariantPropNames: PlasmicMuiButton__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicMuiButton__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicMuiButton\";\n      } else {\n        func.displayName = `PlasmicMuiButton.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicMuiButton = Object.assign(\n      // Top-level PlasmicMuiButton renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicMuiButton\n        internalVariantProps: PlasmicMuiButton__VariantProps,\n        internalArgProps: PlasmicMuiButton__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-36-msYReFMDyGTN/comp__03lXAatnPJTzGx.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface MuiButtonProps extends Omit<DefaultMuiButtonProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultMuiButtonProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function MuiButton_(props, ref) {\n        \n    // Use PlasmicMuiButton to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicMuiButton are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all MuiButtonProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicMuiButton, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const MuiButton = React__namespace.forwardRef(MuiButton_);\n\nexports.default = MuiButton;\n","imports":["react","index-6cf1d5e9.js","react-dom","css__03lXAatnPJTzGx.css"],"type":"code"},{"fileName":"comp__1MrXClCMmd.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index-6cf1d5e9.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst _jsxFileName$1 = \"/tmp/tmp-36-msYReFMDyGTN/render__1MrXClCMmd.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicMuiNavTab__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n\n    const PlasmicMuiNavTab__ArgProps = new Array(\"children\",\"disabled\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicMuiNavTab__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_mHWcK7NZcRAyb8v8MxSPJd\", \"MuiNavTab__root___5JrNf\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 89}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.children,\n      \n  }) \n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicMuiNavTab__ArgProps,\n          internalVariantPropNames: PlasmicMuiNavTab__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicMuiNavTab__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicMuiNavTab\";\n      } else {\n        func.displayName = `PlasmicMuiNavTab.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicMuiNavTab = Object.assign(\n      // Top-level PlasmicMuiNavTab renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicMuiNavTab\n        internalVariantProps: PlasmicMuiNavTab__VariantProps,\n        internalArgProps: PlasmicMuiNavTab__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-36-msYReFMDyGTN/comp__1MrXClCMmd.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface MuiNavTabProps extends Omit<DefaultMuiNavTabProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultMuiNavTabProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function MuiNavTab_(props, ref) {\n        \n    // Use PlasmicMuiNavTab to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicMuiNavTab are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all MuiNavTabProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicMuiNavTab, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const MuiNavTab = React__namespace.forwardRef(MuiNavTab_);\n\nexports.default = MuiNavTab;\n","imports":["react","index-6cf1d5e9.js","react-dom","css__1MrXClCMmd.css"],"type":"code"},{"fileName":"comp__4KW2M5C9yK.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index-6cf1d5e9.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst _jsxFileName$1 = \"/tmp/tmp-36-msYReFMDyGTN/render__4KW2M5C9yK.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicMuiNavPanel__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n\n\n    const PlasmicMuiNavPanel__ArgProps = new Array(\"index\",\"children\",\"disabled\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicMuiNavPanel__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_mHWcK7NZcRAyb8v8MxSPJd\", \"MuiNavPanel__root___8Yz8F\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 91}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.children,\n      \n  }) \n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicMuiNavPanel__ArgProps,\n          internalVariantPropNames: PlasmicMuiNavPanel__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicMuiNavPanel__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicMuiNavPanel\";\n      } else {\n        func.displayName = `PlasmicMuiNavPanel.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicMuiNavPanel = Object.assign(\n      // Top-level PlasmicMuiNavPanel renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicMuiNavPanel\n        internalVariantProps: PlasmicMuiNavPanel__VariantProps,\n        internalArgProps: PlasmicMuiNavPanel__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-36-msYReFMDyGTN/comp__4KW2M5C9yK.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface MuiNavPanelProps extends Omit<DefaultMuiNavPanelProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultMuiNavPanelProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function MuiNavPanel_(props, ref) {\n        \n    // Use PlasmicMuiNavPanel to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicMuiNavPanel are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all MuiNavPanelProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicMuiNavPanel, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const MuiNavPanel = React__namespace.forwardRef(MuiNavPanel_);\n\nexports.default = MuiNavPanel;\n","imports":["react","index-6cf1d5e9.js","react-dom","css__4KW2M5C9yK.css"],"type":"code"},{"fileName":"comp__6uQrDgkoZk.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index-6cf1d5e9.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst _jsxFileName$1 = \"/tmp/tmp-36-msYReFMDyGTN/render__6uQrDgkoZk.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicNftConsumerWallet__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n    const PlasmicNftConsumerWallet__ArgProps = new Array(\"login\",\"accountAddress\",\"accountBalance\",\"stateLoggedIn\",\"stateLoggingIn\",\"accountLogin\",\"accountLoggedIn\",\"accountLoggingIn\",\"accountNone\",\"accountInfo\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicNftConsumerWallet__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_mHWcK7NZcRAyb8v8MxSPJd\", \"NftConsumerWallet__root__oodRy\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 105}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.accountLogin,\n      \n  }) \n,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.accountLoggedIn,\n      \n  }) \n,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.accountLoggingIn,\n      \n  }) \n,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.accountNone,\n      \n  }) \n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicNftConsumerWallet__ArgProps,\n          internalVariantPropNames: PlasmicNftConsumerWallet__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicNftConsumerWallet__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicNftConsumerWallet\";\n      } else {\n        func.displayName = `PlasmicNftConsumerWallet.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicNftConsumerWallet = Object.assign(\n      // Top-level PlasmicNftConsumerWallet renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicNftConsumerWallet\n        internalVariantProps: PlasmicNftConsumerWallet__VariantProps,\n        internalArgProps: PlasmicNftConsumerWallet__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-36-msYReFMDyGTN/comp__6uQrDgkoZk.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface NftConsumerWalletProps extends Omit<DefaultNftConsumerWalletProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultNftConsumerWalletProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function NftConsumerWallet_(props, ref) {\n        \n    // Use PlasmicNftConsumerWallet to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicNftConsumerWallet are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all NftConsumerWalletProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicNftConsumerWallet, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const NftConsumerWallet = React__namespace.forwardRef(NftConsumerWallet_);\n\nexports.default = NftConsumerWallet;\n","imports":["react","index-6cf1d5e9.js","react-dom","css__6uQrDgkoZk.css"],"type":"code"},{"fileName":"comp__NZJHqVnmkt.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index-6cf1d5e9.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst _jsxFileName$1 = \"/tmp/tmp-36-msYReFMDyGTN/render__NZJHqVnmkt.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicMuiSubNav__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n\n    const PlasmicMuiSubNav__ArgProps = new Array(\"children\",\"disabled\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicMuiSubNav__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_mHWcK7NZcRAyb8v8MxSPJd\", \"MuiSubNav__root__ilabY\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 89}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.children,\n      \n  }) \n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicMuiSubNav__ArgProps,\n          internalVariantPropNames: PlasmicMuiSubNav__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicMuiSubNav__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicMuiSubNav\";\n      } else {\n        func.displayName = `PlasmicMuiSubNav.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicMuiSubNav = Object.assign(\n      // Top-level PlasmicMuiSubNav renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicMuiSubNav\n        internalVariantProps: PlasmicMuiSubNav__VariantProps,\n        internalArgProps: PlasmicMuiSubNav__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-36-msYReFMDyGTN/comp__NZJHqVnmkt.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface MuiSubNavProps extends Omit<DefaultMuiSubNavProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultMuiSubNavProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function MuiSubNav_(props, ref) {\n        \n    // Use PlasmicMuiSubNav to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicMuiSubNav are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all MuiSubNavProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicMuiSubNav, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const MuiSubNav = React__namespace.forwardRef(MuiSubNav_);\n\nexports.default = MuiSubNav;\n","imports":["react","index-6cf1d5e9.js","react-dom","css__NZJHqVnmkt.css"],"type":"code"},{"fileName":"comp__O0lNhygQRW.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index-6cf1d5e9.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst _jsxFileName$1 = \"/tmp/tmp-36-msYReFMDyGTN/render__O0lNhygQRW.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicNftContext__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n\n\n\n    const PlasmicNftContext__ArgProps = new Array(\"openseaAddress\",\"tokenAddress\",\"children\",\"tokenId\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicNftContext__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_mHWcK7NZcRAyb8v8MxSPJd\", \"NftContext__root___1RUPl\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 93}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.children,\n      \n  }) \n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicNftContext__ArgProps,\n          internalVariantPropNames: PlasmicNftContext__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicNftContext__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicNftContext\";\n      } else {\n        func.displayName = `PlasmicNftContext.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicNftContext = Object.assign(\n      // Top-level PlasmicNftContext renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicNftContext\n        internalVariantProps: PlasmicNftContext__VariantProps,\n        internalArgProps: PlasmicNftContext__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-36-msYReFMDyGTN/comp__O0lNhygQRW.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface NftContextProps extends Omit<DefaultNftContextProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultNftContextProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function NftContext_(props, ref) {\n        \n    // Use PlasmicNftContext to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicNftContext are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all NftContextProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicNftContext, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const NftContext = React__namespace.forwardRef(NftContext_);\n\nexports.default = NftContext;\n","imports":["react","index-6cf1d5e9.js","react-dom","css__O0lNhygQRW.css"],"type":"code"},{"fileName":"comp__cLjzGEC-88.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index-6cf1d5e9.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst _jsxFileName$1 = \"/tmp/tmp-36-msYReFMDyGTN/render__cLjzGEC-88.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicNftConsumer__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    const PlasmicNftConsumer__ArgProps = new Array(\"name\",\"image\",\"thumbnail\",\"description\",\"collectionName\",\"collectionDescription\",\"externalLink\",\"contract\",\"tokenId\",\"numberOfSales\",\"children\",\"buy\",\"creator\",\"owner\",\"fit\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicNftConsumer__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_mHWcK7NZcRAyb8v8MxSPJd\", \"NftConsumer__root__qsE\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 115}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.children,\n      \n  }) \n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicNftConsumer__ArgProps,\n          internalVariantPropNames: PlasmicNftConsumer__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicNftConsumer__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicNftConsumer\";\n      } else {\n        func.displayName = `PlasmicNftConsumer.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicNftConsumer = Object.assign(\n      // Top-level PlasmicNftConsumer renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicNftConsumer\n        internalVariantProps: PlasmicNftConsumer__VariantProps,\n        internalArgProps: PlasmicNftConsumer__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-36-msYReFMDyGTN/comp__cLjzGEC-88.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface NftConsumerProps extends Omit<DefaultNftConsumerProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultNftConsumerProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function NftConsumer_(props, ref) {\n        \n    // Use PlasmicNftConsumer to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicNftConsumer are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all NftConsumerProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicNftConsumer, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const NftConsumer = React__namespace.forwardRef(NftConsumer_);\n\nexports.default = NftConsumer;\n","imports":["react","index-6cf1d5e9.js","react-dom","css__cLjzGEC-88.css"],"type":"code"},{"fileName":"comp__l3_Kdwbw0M.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index-6cf1d5e9.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst _jsxFileName$1 = \"/tmp/tmp-36-msYReFMDyGTN/render__l3_Kdwbw0M.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicMuiNavProvider__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n\n    const PlasmicMuiNavProvider__ArgProps = new Array(\"children\",\"disabled\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicMuiNavProvider__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_mHWcK7NZcRAyb8v8MxSPJd\", \"MuiNavProvider__root__tLfTn\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 89}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.children,\n      \n  }) \n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicMuiNavProvider__ArgProps,\n          internalVariantPropNames: PlasmicMuiNavProvider__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicMuiNavProvider__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicMuiNavProvider\";\n      } else {\n        func.displayName = `PlasmicMuiNavProvider.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicMuiNavProvider = Object.assign(\n      // Top-level PlasmicMuiNavProvider renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicMuiNavProvider\n        internalVariantProps: PlasmicMuiNavProvider__VariantProps,\n        internalArgProps: PlasmicMuiNavProvider__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-36-msYReFMDyGTN/comp__l3_Kdwbw0M.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface MuiNavProviderProps extends Omit<DefaultMuiNavProviderProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultMuiNavProviderProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function MuiNavProvider_(props, ref) {\n        \n    // Use PlasmicMuiNavProvider to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicMuiNavProvider are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all MuiNavProviderProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicMuiNavProvider, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const MuiNavProvider = React__namespace.forwardRef(MuiNavProvider_);\n\nexports.default = MuiNavProvider;\n","imports":["react","index-6cf1d5e9.js","react-dom","css__l3_Kdwbw0M.css"],"type":"code"},{"fileName":"comp__wk5D0GHQp4.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index-6cf1d5e9.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst _jsxFileName$1 = \"/tmp/tmp-36-msYReFMDyGTN/render__wk5D0GHQp4.tsx\";\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicMuiTheme__VariantProps = new Array();\n  \n\n    \n    \n\n\n\n\n\n    const PlasmicMuiTheme__ArgProps = new Array(\"children\",\"disabled\",\"theme\");\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n  \n\n    \n\n    \n\n    \n    function PlasmicMuiTheme__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        \n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_mHWcK7NZcRAyb8v8MxSPJd\", \"MuiTheme__root__bZnDu\"), __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 91}}\n    \n    \n          ,  index.renderPlasmicSlot({\n      defaultContents: null,\n      value: args.children,\n      \n  }) \n        )\n  \n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicMuiTheme__ArgProps,\n          internalVariantPropNames: PlasmicMuiTheme__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicMuiTheme__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicMuiTheme\";\n      } else {\n        func.displayName = `PlasmicMuiTheme.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicMuiTheme = Object.assign(\n      // Top-level PlasmicMuiTheme renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicMuiTheme\n        internalVariantProps: PlasmicMuiTheme__VariantProps,\n        internalArgProps: PlasmicMuiTheme__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-36-msYReFMDyGTN/comp__wk5D0GHQp4.tsx\";\n\n\n    // Your component props start with props for variants and slots you defined\n    // in Plasmic, but you can add more here, like event handlers that you can\n    // attach to named nodes in your component.\n    //\n    // If you don't want to expose certain variants or slots as a prop, you can use\n    // Omit to hide them:\n    //\n    // interface MuiThemeProps extends Omit<DefaultMuiThemeProps, \"hideProps1\"|\"hideProp2\"> {\n    //   // etc.\n    // }\n    //\n    // You can also stop extending from DefaultMuiThemeProps altogether and have\n    // total control over the props for your component.\n    \n\n\n    \n      function MuiTheme_(props, ref) {\n        \n    // Use PlasmicMuiTheme to render this component as it was\n    // designed in Plasmic, by activating the appropriate variants,\n    // attaching the appropriate event handlers, etc.  You\n    // can also install whatever React hooks you need here to manage state or\n    // fetch data.\n    //\n    // Props you can pass into PlasmicMuiTheme are:\n    // 1. Variants you want to activate,\n    // 2. Contents for slots you want to fill,\n    // 3. Overrides for any named node in the component to attach behavior and data,\n    // 4. Props to set on the root node.\n    //\n    // By default, we are just piping all MuiThemeProps here, but feel free\n    // to do whatever works for you.\n  \n        return React__namespace.createElement(PlasmicMuiTheme, { root: {ref}, ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 42}} );\n      }\n\n      const MuiTheme = React__namespace.forwardRef(MuiTheme_);\n\nexports.default = MuiTheme;\n","imports":["react","index-6cf1d5e9.js","react-dom","css__wk5D0GHQp4.css"],"type":"code"},{"fileName":"css__03lXAatnPJTzGx.css","source":".MuiButton__root__ehque{display:flex;flex-direction:row}","type":"asset"},{"fileName":"css__1MrXClCMmd.css","source":".MuiNavTab__root___5JrNf{display:flex;flex-direction:row}","type":"asset"},{"fileName":"css__4DP6LCsF5DAEDS.css","source":".HomePage__root__eug8X{display:flex;position:relative;flex-direction:column;align-items:stretch;justify-content:flex-start;width:100%;height:100%;min-width:0;min-height:0}.HomePage__root2__xdwp7{display:flex;flex-direction:column;width:100%;height:2294px;min-width:0;flex-shrink:0}.HomePage__muiTheme___4CQvT.__wab_instance{position:relative}.HomePage__muiNavProvider__sJvO0.__wab_instance{position:relative}.HomePage__openSeaSdk__pXpiU.__wab_instance{display:block}.HomePage__svg__iDTmD{object-fit:cover;width:41px;height:41px}","type":"asset"},{"fileName":"css__4KW2M5C9yK.css","source":".MuiNavPanel__root___8Yz8F{display:flex;flex-direction:row}","type":"asset"},{"fileName":"css__6uQrDgkoZk.css","source":".NftConsumerWallet__root__oodRy{display:flex;flex-direction:row}","type":"asset"},{"fileName":"css__NZJHqVnmkt.css","source":".MuiSubNav__root__ilabY{display:flex;flex-direction:row}","type":"asset"},{"fileName":"css__O0lNhygQRW.css","source":".NftContext__root___1RUPl{display:flex;flex-direction:row}","type":"asset"},{"fileName":"css__cLjzGEC-88.css","source":".NftConsumer__root__qsE{display:flex;flex-direction:row}","type":"asset"},{"fileName":"css__l3_Kdwbw0M.css","source":".MuiNavProvider__root__tLfTn{display:flex;flex-direction:row}","type":"asset"},{"fileName":"css__wk5D0GHQp4.css","source":".MuiTheme__root__bZnDu{display:flex;flex-direction:row}","type":"asset"},{"fileName":"entrypoint.css","source":".__wab_flex-container{display:flex;flex:1;align-self:stretch;pointer-events:none}.__wab_flex-container>*{pointer-events:auto}.__wab_slot{display:contents}.__wab_slot-string-wrapper{position:relative}.__wab_passthrough{display:contents}.__wab_img-wrapper{display:inherit;flex-direction:inherit;width:auto;height:auto;overflow:hidden;max-width:100%;flex-shrink:0;margin:0}.__wab_img-spacer-svg{display:block;margin:0;border:0;padding:0}.__wab_img{position:absolute;top:0;left:0;bottom:0;right:0;margin:0;padding:0;border:0;display:block;width:100%;min-width:100%;max-width:100%;min-height:100%;max-height:100%;box-sizing:border-box}.__wab_picture{display:contents}\n.plasmic_default__all{display:block;white-space:inherit;grid-row:auto;grid-column:auto;position:relative;background:0 0;background-size:100% 100%;background-repeat:no-repeat;box-shadow:none;box-sizing:border-box;text-decoration-line:none;transition-property:all;transition-timing-function:ease;transition-delay:0s;transition-duration:0s;margin:0;border-width:0}.plasmic_default__img{display:inline-block}.plasmic_default__span{display:inline;position:static;font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit}.plasmic_default__input{font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;background-image:linear-gradient(#fff,#fff);padding:2px;border:1px solid #d3d3d3}.plasmic_default__textarea{font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;padding:2px;border:1px solid #d3d3d3}.plasmic_default__button{font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;background-image:none;padding:2px 6px;border:1px solid #d3d3d3}.plasmic_default__code{font-family:inherit;line-height:inherit}.plasmic_default__pre{font-family:inherit;line-height:inherit}.plasmic_default__p{font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit}.plasmic_default__h1{font-size:inherit;font-weight:inherit}.plasmic_default__h2{font-size:inherit;font-weight:inherit}.plasmic_default__h3{font-size:inherit;font-weight:inherit}.plasmic_default__h4{font-size:inherit;font-weight:inherit}.plasmic_default__h5{font-size:inherit;font-weight:inherit}.plasmic_default__h6{font-size:inherit;font-weight:inherit}.plasmic_default__address{font-style:inherit}.plasmic_default__ol{list-style-type:none;padding:0}.plasmic_default__ul{list-style-type:none;padding:0}.plasmic_default__select{padding:2px 6px}.plasmic_default__li{list-style-type:none}.plasmic_default__component_wrapper{display:grid}.__wab_text{display:inline-block}.plasmic_page_wrapper{display:flex;width:100%;min-height:100vh;align-items:stretch;align-self:start}.plasmic_page_wrapper>*{height:auto!important}\n.root_reset_mHWcK7NZcRAyb8v8MxSPJd{font-family:\"Inter\",sans-serif;font-size:16px;font-weight:400;font-style:normal;color:#535353;text-align:left;text-transform:none;line-height:1.5;letter-spacing:normal;white-space:pre-wrap}","type":"asset"},{"fileName":"global___6zkQeuWE6veL1.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index-6cf1d5e9.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst ScreenContext = React__namespace.createContext(\"PLEASE_RENDER_INSIDE_PROVIDER\" );\n    \n      /**\n       *  @deprecated Plasmic now uses a custom hook for Screen variants, which is\n       *  automatically included in your components. Please remove this provider\n       *  from your code.\n       */\n      function ScreenVariantProvider(props) {\n        console.warn('DEPRECATED: Plasmic now uses a custom hook for Screen variants, which is automatically included in your components. Please remove this provider from your code.');\n        return props.children;\n      }\n    \n    \nconst useScreenVariants = index.createUseScreenVariants(true,{\n  \"mobileOnly\": \"(min-width:0px) and (max-width:768px)\"\n});\n    /* prettier-ignore-end */\n\nexports.ScreenContext = ScreenContext;\nexports.ScreenVariantProvider = ScreenVariantProvider;\nexports.default = ScreenContext;\nexports.useScreenVariants = useScreenVariants;\n","imports":["react","index-6cf1d5e9.js","react-dom"],"type":"code"},{"fileName":"index-6cf1d5e9.js","code":"'use strict';\n\nvar React = require('react');\nvar _reactDom = require('react-dom');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n\tif (e && e.__esModule) return e;\n\tvar n = Object.create(null);\n\tif (e) {\n\t\tObject.keys(e).forEach(function (k) {\n\t\t\tif (k !== 'default') {\n\t\t\t\tvar d = Object.getOwnPropertyDescriptor(e, k);\n\t\t\t\tObject.defineProperty(n, k, d.get ? d : {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn e[k];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\tn['default'] = e;\n\treturn Object.freeze(n);\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar _reactDom__default = /*#__PURE__*/_interopDefaultLegacy(_reactDom);\n\nvar classnames = {exports: {}};\n\n(function (module) {\n/* global define */\n\n(function () {\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n}(classnames));\n\nvar classNames$1 = classnames.exports;\n\nfunction notNil(x) {\r\n    return x != null;\r\n}\r\nfunction pick(obj) {\r\n    var keys = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        keys[_i - 1] = arguments[_i];\r\n    }\r\n    if (Object.keys(obj).length === 0) {\r\n        return obj;\r\n    }\r\n    var res = {};\r\n    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\r\n        var key = keys_1[_a];\r\n        if (key in obj) {\r\n            res[key] = obj[key];\r\n        }\r\n    }\r\n    return res;\r\n}\r\nfunction omit(obj) {\r\n    var keys = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        keys[_i - 1] = arguments[_i];\r\n    }\r\n    if (Object.keys(obj).length === 0) {\r\n        return obj;\r\n    }\r\n    var res = {};\r\n    for (var _a = 0, _b = Object.keys(obj); _a < _b.length; _a++) {\r\n        var key = _b[_a];\r\n        if (!keys.includes(key)) {\r\n            res[key] = obj[key];\r\n        }\r\n    }\r\n    return res;\r\n}\r\nfunction isSubset(a1, a2) {\r\n    return a1.every(function (x) { return a2.includes(x); });\r\n}\r\nfunction chainSingleArgFuncs() {\r\n    var funcs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        funcs[_i] = arguments[_i];\r\n    }\r\n    if (funcs.length === 0) {\r\n        return undefined;\r\n    }\r\n    return function (arg) {\r\n        var res = arg;\r\n        for (var _i = 0, funcs_1 = funcs; _i < funcs_1.length; _i++) {\r\n            var func = funcs_1[_i];\r\n            res = func(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\n\nvar isBrowser = typeof window !== \"undefined\";\r\nvar NONE = Symbol(\"NONE\");\r\nvar useIsomorphicLayoutEffect = isBrowser\r\n    ? React__default['default'].useLayoutEffect\r\n    : React__default['default'].useEffect;\r\nfunction createElementWithChildren(elementType, props, children) {\r\n    if (Array.isArray(children)) {\r\n        return React__default['default'].createElement.apply(React__default['default'], __spreadArray([elementType,\r\n            props], children));\r\n    }\r\n    else if (children || \"children\" in props) {\r\n        // Only call React.createElement with `children` if there are actual children,\r\n        // or if there was an explicit (albeit undefined) children passed via\r\n        // props.  Otherwise, if you pass `undefined` as the children argument\r\n        // to React.createElement, the created element will have prop {children: undefined}.\r\n        // If the `root` is an PlasmicGeneratedComponent, and these props with {children: undefined}\r\n        // are used, then it will be taken as a `children` override, and will thus blank out\r\n        // everything under the root node.\r\n        return React__default['default'].createElement(elementType, props, children);\r\n    }\r\n    else {\r\n        return React__default['default'].createElement(elementType, props);\r\n    }\r\n}\r\nfunction ensureNotArray(children) {\r\n    if (Array.isArray(children)) {\r\n        if (children.length === 1) {\r\n            return children[0];\r\n        }\r\n        else {\r\n            return React__default['default'].createElement.apply(React__default['default'], __spreadArray([React__default['default'].Fragment, {}], children));\r\n        }\r\n    }\r\n    else {\r\n        return children;\r\n    }\r\n}\r\nfunction isReactNode(x) {\r\n    return (typeof x === \"string\" || typeof x === \"number\" || React__default['default'].isValidElement(x));\r\n}\r\nfunction mergeProps(props) {\r\n    var restProps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restProps[_i - 1] = arguments[_i];\r\n    }\r\n    if (restProps.every(function (rest) { return Object.keys(rest).length === 0; })) {\r\n        return props;\r\n    }\r\n    var result = __assign({}, props);\r\n    for (var _a = 0, restProps_1 = restProps; _a < restProps_1.length; _a++) {\r\n        var rest = restProps_1[_a];\r\n        for (var _b = 0, _c = Object.keys(rest); _b < _c.length; _b++) {\r\n            var key = _c[_b];\r\n            result[key] = mergePropVals(key, result[key], rest[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction updateRef(ref, value) {\r\n    if (!ref) {\r\n        return;\r\n    }\r\n    if (typeof ref === \"function\") {\r\n        ref(value);\r\n    }\r\n    else {\r\n        if (!Object.isFrozen(ref)) {\r\n            ref.current = value;\r\n        }\r\n    }\r\n}\r\nfunction mergeRefs() {\r\n    var refs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        refs[_i] = arguments[_i];\r\n    }\r\n    return function (value) {\r\n        for (var _i = 0, refs_1 = refs; _i < refs_1.length; _i++) {\r\n            var ref = refs_1[_i];\r\n            updateRef(ref, value);\r\n        }\r\n    };\r\n}\r\nfunction mergePropVals(name, val1, val2) {\r\n    if (val1 === NONE || val2 === NONE) {\r\n        // The NONE sentinel always skips all merging and returns null\r\n        return null;\r\n    }\r\n    else if (val1 == null) {\r\n        // If either of them is nil, prefer the other\r\n        return val2;\r\n    }\r\n    else if (val2 == null) {\r\n        return val1;\r\n    }\r\n    else if (name === \"className\") {\r\n        // Special case for className -- always combine both class names\r\n        return classNames$1(val1, val2);\r\n    }\r\n    else if (name === \"style\") {\r\n        // Special case for style -- always shallow-merge style dicts\r\n        return __assign(__assign({}, val1), val2);\r\n    }\r\n    else if (name === \"ref\") {\r\n        // Special case for ref\r\n        return mergeRefs(val1, val2);\r\n    }\r\n    else if (typeof val1 !== typeof val2) {\r\n        // If the type of the two values are different, then no way to merge them.\r\n        // Prefer val2.\r\n        return val2;\r\n    }\r\n    else if (name.startsWith(\"on\") && typeof val1 === \"function\") {\r\n        // Special case for event handlers -- always call both handlers\r\n        return function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var res;\r\n            if (typeof val1 === \"function\") {\r\n                res = val1.apply(void 0, args);\r\n            }\r\n            if (typeof val2 === \"function\") {\r\n                res = val2.apply(void 0, args);\r\n            }\r\n            return res;\r\n        };\r\n    }\r\n    else {\r\n        // For all else, prefer val2\r\n        return val2;\r\n    }\r\n}\n\n/**\r\n * Responsive `<img/>` replacement, based on `next/image`\r\n */\r\n// Default image sizes to snap to\r\n// TODO: make this configurable?\r\nvar IMG_SIZES = [16, 32, 48, 64, 96, 128, 256, 384];\r\nvar DEVICE_SIZES = [640, 750, 828, 1080, 1200, 1920, 2048, 3840];\r\nvar ALL_SIZES = __spreadArray(__spreadArray([], IMG_SIZES), DEVICE_SIZES);\r\nReact__default['default'].forwardRef(function PlasmicImg(props, ref) {\r\n    var src = props.src, className = props.className, displayWidth = props.displayWidth, displayHeight = props.displayHeight, quality = props.quality, loader = props.loader, containerRef = props.containerRef, style = props.style, rest = __rest(props, [\"src\", \"className\", \"displayWidth\", \"displayHeight\", \"quality\", \"loader\", \"containerRef\", \"style\"]);\r\n    var _a = typeof src === \"string\"\r\n        ? { fullWidth: undefined, fullHeight: undefined }\r\n        : src, fullWidth = _a.fullWidth, fullHeight = _a.fullHeight;\r\n    var srcStr = typeof src === \"string\" ? src : src.src;\r\n    // Assume external image if either dimension is null and use usual <img>\r\n    // (or if the image is an SVG)\r\n    if (fullHeight == null || fullWidth == null || srcStr.endsWith(\".svg\")) {\r\n        return (React__default['default'].createElement(\"img\", __assign({ src: srcStr, className: className, style: style }, rest, { ref: ref })));\r\n    }\r\n    var _b = getWidths(displayWidth, fullWidth), sizes = _b.sizes, widthDescs = _b.widthDescs;\r\n    var imageLoader = getImageLoader(loader);\r\n    var spacerSvg = \"<svg width=\\\"\" + fullWidth + \"\\\" height=\\\"\" + fullHeight + \"\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\"/>\";\r\n    var spacerSvgBase64 = typeof window === \"undefined\"\r\n        ? Buffer.from(spacerSvg).toString(\"base64\")\r\n        : window.btoa(spacerSvg);\r\n    return (React__default['default'].createElement(\"div\", { className: classNames$1(className, \"__wab_img-wrapper\"), ref: containerRef, style: __assign(__assign({}, style), { width: isPercentage(displayWidth) ? displayWidth : undefined, height: isPercentage(displayHeight) ? displayHeight : undefined }) },\r\n        React__default['default'].createElement(\"img\", { alt: \"\", \"aria-hidden\": true, className: \"__wab_img-spacer-svg\", src: \"data:image/svg+xml;base64,\" + spacerSvgBase64, style: __assign({ width: isPercentage(displayWidth) ? \"100%\" : displayWidth, height: isPercentage(displayHeight) ? \"100%\" : displayHeight }, (style ? pick(style, \"objectFit\", \"objectPosition\") : {})) }),\r\n        makePicture({\r\n            imageLoader: imageLoader,\r\n            widthDescs: widthDescs,\r\n            sizes: sizes,\r\n            src: srcStr,\r\n            quality: quality,\r\n            ref: ref,\r\n            style: style ? pick(style, \"objectFit\", \"objectPosition\") : undefined,\r\n            imgProps: rest,\r\n            className: \"__wab_img\",\r\n        })));\r\n});\r\nfunction makePicture(opts) {\r\n    // If imageLoader is undefined, then this renders to just a normal\r\n    // <img />.  Else it will render to a <picture> with a <source> for\r\n    // webp, and srcSet/sizes set according to width requirements.\r\n    var imageLoader = opts.imageLoader, widthDescs = opts.widthDescs, src = opts.src, quality = opts.quality, style = opts.style, className = opts.className, sizes = opts.sizes, imgProps = opts.imgProps, ref = opts.ref;\r\n    return (React__default['default'].createElement(\"picture\", { className: \"__wab_picture\" },\r\n        imageLoader && (React__default['default'].createElement(\"source\", { type: \"image/webp\", srcSet: widthDescs\r\n                .map(function (wd) {\r\n                return imageLoader({\r\n                    src: src,\r\n                    quality: quality,\r\n                    width: wd.width,\r\n                    format: \"webp\",\r\n                }) + \" \" + wd.desc;\r\n            })\r\n                .join(\", \") })),\r\n        React__default['default'].createElement(\"img\", __assign({}, imgProps, { ref: ref, className: className, decoding: \"async\", src: imageLoader\r\n                ? imageLoader({\r\n                    src: src,\r\n                    quality: quality,\r\n                    width: widthDescs[widthDescs.length - 1].width,\r\n                })\r\n                : src, srcSet: imageLoader\r\n                ? widthDescs\r\n                    .map(function (wd) {\r\n                    return imageLoader({\r\n                        src: src,\r\n                        quality: quality,\r\n                        width: wd.width,\r\n                    }) + \" \" + wd.desc;\r\n                })\r\n                    .join(\", \")\r\n                : undefined, sizes: imageLoader ? sizes : undefined, style: style ? pick(style, \"objectFit\", \"objectPosition\") : undefined }))));\r\n}\r\nfunction getClosestPresetSize(width) {\r\n    var _a;\r\n    return (_a = ALL_SIZES.find(function (w) { return w >= width; })) !== null && _a !== void 0 ? _a : ALL_SIZES[ALL_SIZES.length - 1];\r\n}\r\n/**\r\n * Computes the appropriate srcSet and sizes to use\r\n */\r\nfunction getWidths(width, fullWidth) {\r\n    var pixelWidth = getPixelWidth(width);\r\n    if (pixelWidth != null) {\r\n        // If there's an exact width, then we just need to display it at 1x and 2x density\r\n        return {\r\n            widthDescs: [\r\n                {\r\n                    width: getClosestPresetSize(pixelWidth),\r\n                    desc: \"1x\",\r\n                },\r\n                {\r\n                    width: getClosestPresetSize(pixelWidth * 2),\r\n                    desc: \"2x\",\r\n                },\r\n            ],\r\n            sizes: undefined,\r\n        };\r\n    }\r\n    // Otherwise we don't know what sizes we'll end up, so we just cap it at\r\n    // device width.  TODO: do better!\r\n    var usefulSizes = DEVICE_SIZES.filter(function (size) { return !fullWidth || size < fullWidth; });\r\n    if (!!fullWidth && usefulSizes.length === 0) {\r\n        // image fullWidth is smaller than all device sizes.  So all we can do\r\n        // is offer 1x\r\n        return {\r\n            widthDescs: [\r\n                {\r\n                    width: getClosestPresetSize(fullWidth),\r\n                    desc: \"1x\",\r\n                },\r\n            ],\r\n            sizes: undefined,\r\n        };\r\n    }\r\n    return {\r\n        widthDescs: usefulSizes.map(function (size) { return ({\r\n            width: size,\r\n            desc: size + \"w\",\r\n        }); }),\r\n        sizes: \"100vw\",\r\n    };\r\n}\r\nfunction isPercentage(width) {\r\n    var _a;\r\n    if (typeof width !== \"string\") {\r\n        return false;\r\n    }\r\n    return ((_a = parseNumeric(width)) === null || _a === void 0 ? void 0 : _a.units) === \"%\";\r\n}\r\nfunction getPixelWidth(width) {\r\n    if (width == null || width == \"\") {\r\n        return undefined;\r\n    }\r\n    if (typeof width === \"number\") {\r\n        return width;\r\n    }\r\n    var parsed = parseNumeric(width);\r\n    if (parsed && (!parsed.units || parsed.units === \"px\")) {\r\n        return parsed.num;\r\n    }\r\n    return undefined;\r\n}\r\nfunction parseNumeric(val) {\r\n    // Parse strings like \"30\", \"30px\", \"30%\", \"30px /* blah blah */\"\r\n    var res = val.match(/^\\s*(-?(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+))\\s*([a-z]*|%)\\s*(?:\\/\\*.*)?$/i);\r\n    if (res == null) {\r\n        return undefined;\r\n    }\r\n    var num = res[1];\r\n    var units = res[2];\r\n    return { num: +num, units: units };\r\n}\r\nfunction getImageLoader(loader) {\r\n    if (loader == null) {\r\n        return undefined;\r\n    }\r\n    else if (loader === \"plasmic\") {\r\n        return PLASMIC_IMAGE_LOADER;\r\n    }\r\n    else {\r\n        return loader;\r\n    }\r\n}\r\nvar PLASMIC_IMAGE_LOADER = function (opts) {\r\n    var _a;\r\n    return opts.src + \"?w=\" + opts.width + \"&q=\" + ((_a = opts.quality) !== null && _a !== void 0 ? _a : 75) + (opts.format ? \"&f=\" + opts.format : \"\");\r\n};\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst $f01a183cc7bdff77849e49ad26eb904$var$defaultContext = {\n  prefix: Math.round(Math.random() * 10000000000),\n  current: 0\n};\n\nconst $f01a183cc7bdff77849e49ad26eb904$var$SSRContext = /*#__PURE__*/React__default['default'].createContext($f01a183cc7bdff77849e49ad26eb904$var$defaultContext);\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nfunction SSRProvider(props) {\n  let cur = React.useContext($f01a183cc7bdff77849e49ad26eb904$var$SSRContext);\n  let value = React.useMemo(() => ({\n    // If this is the first SSRProvider, set to zero, otherwise increment.\n    prefix: cur === $f01a183cc7bdff77849e49ad26eb904$var$defaultContext ? 0 : ++cur.prefix,\n    current: 0\n  }), [cur]);\n  return /*#__PURE__*/React__default['default'].createElement($f01a183cc7bdff77849e49ad26eb904$var$SSRContext.Provider, {\n    value: value\n  }, props.children);\n}\n\nvar PlasmicRootContext = React__namespace.createContext(undefined);\r\nfunction PlasmicRootProvider(props) {\r\n    var platform = props.platform, children = props.children;\r\n    var context = React__namespace.useMemo(function () { return ({\r\n        platform: platform,\r\n    }); }, [platform]);\r\n    return (React__namespace.createElement(PlasmicRootContext.Provider, { value: context },\r\n        React__namespace.createElement(SSRProvider, null, children)));\r\n}\n\nfunction renderStack(as, props, hasGap, ref) {\r\n    var children = props.children, rest = __rest(props, [\"children\"]);\r\n    var wrappedChildren = wrapFlexContainerChildren(children, hasGap !== null && hasGap !== void 0 ? hasGap : false);\r\n    return createElementWithChildren(as, __assign({ ref: ref }, rest), wrappedChildren);\r\n}\r\nfunction FlexStack_(props, outerRef) {\r\n    var as = props.as, hasGap = props.hasGap, rest = __rest(props, [\"as\", \"hasGap\"]);\r\n    return renderStack(as !== null && as !== void 0 ? as : \"div\", rest, hasGap, outerRef);\r\n}\r\nvar FlexStack = React__namespace.forwardRef(FlexStack_);\r\nvar makeStackImpl = function (as) {\r\n    return React__namespace.forwardRef(function (props, ref) {\r\n        var hasGap = props.hasGap, rest = __rest(props, [\"hasGap\"]);\r\n        return renderStack(as, rest, hasGap, ref);\r\n    });\r\n};\r\nvar Stack = Object.assign(FlexStack, {\r\n    div: makeStackImpl(\"div\"),\r\n    a: makeStackImpl(\"a\"),\r\n    button: makeStackImpl(\"button\"),\r\n    h1: makeStackImpl(\"h1\"),\r\n    h2: makeStackImpl(\"h2\"),\r\n    h3: makeStackImpl(\"h3\"),\r\n    h4: makeStackImpl(\"h4\"),\r\n    h5: makeStackImpl(\"h5\"),\r\n    h6: makeStackImpl(\"h6\"),\r\n    label: makeStackImpl(\"label\"),\r\n    form: makeStackImpl(\"form\"),\r\n    section: makeStackImpl(\"section\"),\r\n    head: makeStackImpl(\"head\"),\r\n    main: makeStackImpl(\"main\"),\r\n    nav: makeStackImpl(\"nav\"),\r\n});\nfunction wrapFlexContainerChildren(children, hasGap) {\r\n    // We need to always wrap the children, even if there are no gaps, because\r\n    // otherwise if we toggle between with and without gap, React reconciliation\r\n    // will blow away the children tree and all state if we switch from having\r\n    // a wrapper and not.\r\n    var className = hasGap ? \"__wab_flex-container\" : \"__wab_passthrough\";\r\n    if (!children) {\r\n        return null;\r\n    }\r\n    else if (Array.isArray(children)) {\r\n        return React__namespace.createElement.apply(React__namespace, __spreadArray([\"div\", { className: className }], children));\r\n    }\r\n    else {\r\n        return React__namespace.createElement(\"div\", { className: className }, children);\r\n    }\r\n}\r\nfunction createPlasmicElement(override, defaultRoot, defaultProps, wrapChildrenInFlex) {\r\n    if (!override || Object.keys(override).length === 0) {\r\n        return createElementWithChildren(defaultRoot, defaultProps, defaultProps.children);\r\n    }\r\n    var override2 = deriveOverride(override);\r\n    var props = mergeOverrideProps(defaultProps, override2.props);\r\n    if (override2.type === \"render\") {\r\n        return override2.render(props, defaultRoot);\r\n    }\r\n    var root = defaultRoot;\r\n    if (override2.type === \"as\" && override2.as) {\r\n        if (defaultRoot === Stack) {\r\n            // If there was an \"as\" override specified, but the default type is\r\n            // a Stack, then we don't want to switch to using \"as\" as the root,\r\n            // because then we'd lose the flex wrapper that Stack provides.\r\n            // Instead, we specify the \"as\" as the \"as\" prop to Stack.\r\n            props.as = override2.as;\r\n        }\r\n        else {\r\n            root = override2.as;\r\n        }\r\n    }\r\n    var children = props.children;\r\n    if (override2.wrapChildren) {\r\n        children = override2.wrapChildren(ensureNotArray(children));\r\n    }\r\n    if (wrapChildrenInFlex) {\r\n        // For legacy, we still support data-plasmic-wrap-flex-children\r\n        children = wrapFlexContainerChildren(children, true);\r\n    }\r\n    var result = createElementWithChildren(root, props, children);\r\n    if (override2.wrap) {\r\n        result = override2.wrap(result);\r\n    }\r\n    return result;\r\n}\r\n// We use data-plasmic-XXX attributes for custom properties since Typescript doesn't\r\n// support type check on jsx pragma. See https://github.com/microsoft/TypeScript/issues/21699\r\n// for more info.\r\nvar seenElements = new Map();\r\nfunction createPlasmicElementProxy(defaultElement, props) {\r\n    // We use seenElements to keep track of elements that has been rendered by\r\n    // createPlasmicElementProxy().  When a JSX tree is evaluated, the JSX factory\r\n    // is invoked from the leaf to the root as the last call.  So we can store\r\n    // all the elements we've created until we encounter the leaf, at which point\r\n    // we will clear this map.  We are guaranteed that this map will only contain\r\n    // elements from one Plasmic* component at a time, because we're just creating\r\n    // elements and not \"rendering\" at this point; even if this JSX tree references\r\n    // other Plasmic* elements, we'll just create an element referencing that component,\r\n    // rather than following into the content of that component.\r\n    //\r\n    // TODO: is this ConcurrentMode friendly?\r\n    var _a;\r\n    var children = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        children[_i - 2] = arguments[_i];\r\n    }\r\n    if (props == null) {\r\n        props = {};\r\n    }\r\n    var name = props[\"data-plasmic-name\"];\r\n    var isRoot = props[\"data-plasmic-root\"];\r\n    var forNodeName = props[\"data-plasmic-for-node\"];\r\n    delete props[\"data-plasmic-name\"];\r\n    delete props[\"data-plasmic-root\"];\r\n    delete props[\"data-plasmic-for-node\"];\r\n    var element = createPlasmicElementFromJsx.apply(void 0, __spreadArray([defaultElement,\r\n        props], children));\r\n    if (name) {\r\n        seenElements.set(name, element);\r\n    }\r\n    if (isRoot) {\r\n        // If this is the root, and we requested a specific node by specifying data-plasmic-for-node,\r\n        // then return that node instead\r\n        var forNode = forNodeName\r\n            ? (_a = seenElements.get(forNodeName)) !== null && _a !== void 0 ? _a : null\r\n            : element;\r\n        // Clear out the seenElements map, as we're done rendering this Plasmic* component.\r\n        seenElements.clear();\r\n        return forNode;\r\n    }\r\n    return element;\r\n}\r\nfunction createPlasmicElementFromJsx(defaultElement, props) {\r\n    var _a;\r\n    var children = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        children[_i - 2] = arguments[_i];\r\n    }\r\n    var override = props[\"data-plasmic-override\"];\r\n    var wrapFlexChild = props[\"data-plasmic-wrap-flex-child\"];\r\n    var triggerProps = ((_a = props[\"data-plasmic-trigger-props\"]) !== null && _a !== void 0 ? _a : []);\r\n    delete props[\"data-plasmic-override\"];\r\n    delete props[\"data-plasmic-wrap-flex-child\"];\r\n    delete props[\"data-plasmic-trigger-props\"];\r\n    return createPlasmicElement(override, defaultElement, mergeProps.apply(void 0, __spreadArray([props,\r\n        children.length === 0 ? {} : { children: children.length === 1 ? children[0] : children }], triggerProps)), wrapFlexChild);\r\n}\r\nvar UNSET = Symbol(\"UNSET\");\r\nfunction mergeOverrideProps(defaults, overrides) {\r\n    if (!overrides) {\r\n        return defaults;\r\n    }\r\n    var result = __assign({}, defaults);\r\n    for (var _i = 0, _a = Object.keys(overrides); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var defaultVal = defaults[key];\r\n        var overrideVal = overrides[key];\r\n        if (overrideVal === UNSET) {\r\n            delete result[key];\r\n        }\r\n        else {\r\n            // We use the NONE sentinel if the overrideVal is nil, and is not one of the\r\n            // props that we merge by default -- which are className, style, and\r\n            // event handlers.  This means for all other \"normal\" props -- like children,\r\n            // title, etc -- a nil value will unset the default.\r\n            if (overrideVal == null &&\r\n                key !== \"className\" &&\r\n                key !== \"style\" &&\r\n                !(key.startsWith(\"on\") && typeof defaultVal === \"function\")) {\r\n                overrideVal = NONE;\r\n            }\r\n            result[key] = mergePropVals(key, defaultVal, overrideVal);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction deriveOverride(x) {\r\n    if (!x) {\r\n        // undefined Binding is an empty Binding\r\n        return {\r\n            type: \"default\",\r\n            props: {},\r\n        };\r\n    }\r\n    else if (isReactNode(x)) {\r\n        // If ReactNode, then assume this is the children\r\n        return {\r\n            type: \"default\",\r\n            props: {\r\n                children: x,\r\n            },\r\n        };\r\n    }\r\n    else if (typeof x === \"object\") {\r\n        // If any of the overrideKeys is a key of this object, then assume\r\n        // this is a full Override\r\n        if (\"as\" in x) {\r\n            return __assign(__assign({}, x), { props: x.props || {}, type: \"as\" });\r\n        }\r\n        else if (\"render\" in x) {\r\n            return __assign(__assign({}, x), { type: \"render\" });\r\n        }\r\n        else if (\"props\" in x) {\r\n            return __assign(__assign({}, x), { props: x.props || {}, type: \"default\" });\r\n        }\r\n        else if (isSubset(Object.keys(x), [\"wrap\", \"wrapChildren\"])) {\r\n            // Only twiddling functions present, so assume no props overrides\r\n            // (otherwise we'd assume these were props).\r\n            return __assign(__assign({}, x), { props: {}, type: \"default\" });\r\n        }\r\n        // Else, assume this is just a props object.\r\n        return {\r\n            type: \"default\",\r\n            props: x,\r\n        };\r\n    }\r\n    else if (typeof x === \"function\") {\r\n        return {\r\n            type: \"render\",\r\n            render: x,\r\n        };\r\n    }\r\n    throw new Error(\"Unexpected override: \" + x);\r\n}\r\nfunction mergeVariants(v1, v2) {\r\n    if (!v1 || !v2) {\r\n        return v1 || v2 || {};\r\n    }\r\n    return __assign(__assign({}, v1), v2);\r\n}\r\nfunction mergeArgs(a1, a2) {\r\n    if (!a1 || !a2) {\r\n        return a1 || a2 || {};\r\n    }\r\n    return __assign(__assign({}, a1), a2);\r\n}\r\nfunction mergeFlexOverrides(o1, o2) {\r\n    if (!o2) {\r\n        return o1;\r\n    }\r\n    var keys = Array.from(new Set(__spreadArray(__spreadArray([], Object.keys(o1)), Object.keys(o2))));\r\n    var merged = {};\r\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\r\n        var key = keys_1[_i];\r\n        merged[key] = mergeFlexOverride(o1[key], o2[key]);\r\n    }\r\n    return merged;\r\n}\r\nfunction mergeFlexOverride(fo1, fo2) {\r\n    var _a, _b;\r\n    if (!fo1) {\r\n        return fo2;\r\n    }\r\n    if (!fo2) {\r\n        return fo1;\r\n    }\r\n    var o1 = deriveOverride(fo1);\r\n    var o2 = deriveOverride(fo2);\r\n    var wrap = chainSingleArgFuncs.apply(void 0, [o1.wrap, o2.wrap].filter(notNil));\r\n    var wrapChildren = chainSingleArgFuncs.apply(void 0, [o1.wrapChildren, o2.wrapChildren].filter(notNil));\r\n    // \"render\" type always takes precedence, but we still merge the props\r\n    var props = mergeOverrideProps((_a = o1.props) !== null && _a !== void 0 ? _a : {}, o2.props);\r\n    if (o2.type === \"render\") {\r\n        return {\r\n            render: o2.render,\r\n            props: props,\r\n            wrap: wrap,\r\n            wrapChildren: wrapChildren,\r\n        };\r\n    }\r\n    if (o1.type === \"render\") {\r\n        return {\r\n            render: o1.render,\r\n            props: props,\r\n            wrap: wrap,\r\n            wrapChildren: wrapChildren,\r\n        };\r\n    }\r\n    // \"as\" will take precedence\r\n    var as = (_b = (o2.type === \"as\" ? o2.as : undefined)) !== null && _b !== void 0 ? _b : (o1.type === \"as\" ? o1.as : undefined);\r\n    return __assign({ props: props,\r\n        wrap: wrap,\r\n        wrapChildren: wrapChildren }, (as ? { as: as } : {}));\r\n}\r\nfunction deriveRenderOpts(props, config) {\r\n    var _a;\r\n    var name = config.name, descendantNames = config.descendantNames, internalVariantPropNames = config.internalVariantPropNames, internalArgPropNames = config.internalArgPropNames;\r\n    var reservedPropNames = [\"variants\", \"args\", \"overrides\"];\r\n    var variants = mergeVariants(omit.apply(void 0, __spreadArray([pick.apply(void 0, __spreadArray([props], internalVariantPropNames))], reservedPropNames)), props.variants);\r\n    var args = mergeArgs(omit.apply(void 0, __spreadArray([pick.apply(void 0, __spreadArray([props], internalArgPropNames))], reservedPropNames)), props.args);\r\n    var overrides = mergeFlexOverrides(omit.apply(void 0, __spreadArray(__spreadArray(__spreadArray([pick.apply(void 0, __spreadArray([props], descendantNames))], internalArgPropNames), internalVariantPropNames), reservedPropNames)), props.overrides);\r\n    var leftoverProps = omit.apply(void 0, __spreadArray(__spreadArray(__spreadArray([props,\r\n        \"variants\",\r\n        \"args\",\r\n        \"overrides\"], descendantNames), internalVariantPropNames), internalArgPropNames));\r\n    if (Object.keys(leftoverProps).length > 0) {\r\n        overrides = mergeFlexOverrides(overrides, (_a = {},\r\n            _a[name] = {\r\n                props: leftoverProps,\r\n            },\r\n            _a));\r\n    }\r\n    return { variants: variants, args: args, overrides: overrides };\r\n}\nfunction renderPlasmicSlot(opts) {\r\n    var as = opts.as, defaultContents = opts.defaultContents, value = opts.value, rest = __rest(opts, [\"as\", \"defaultContents\", \"value\"]);\r\n    var content = value === undefined ? defaultContents : value;\r\n    if (!content || (Array.isArray(content) && content.length === 0)) {\r\n        return null;\r\n    }\r\n    // If the content is a raw string, then we need to wrap the raw string\r\n    // into an element, in case the slot is inside a flex-gap\r\n    // container (you cannot apply margin to just a text node).\r\n    var maybeString = maybeAsString(content);\r\n    if (maybeString) {\r\n        content = React__namespace.createElement(\"div\", { className: \"__wab_slot-string-wrapper\" }, maybeString);\r\n    }\r\n    var nonEmptyProps = Object.keys(rest).filter(function (p) { return !!rest[p]; });\r\n    if (nonEmptyProps.length === 0) {\r\n        // No attrs to apply to the slot (which means the slot is unstyled), then\r\n        // just render the content directly; no need for style wrapper.\r\n        return React__namespace.createElement(React__namespace.Fragment, null, content);\r\n    }\r\n    return React__namespace.createElement(as || \"div\", mergeProps({ className: \"__wab_slot\" }, rest), content);\r\n}\r\nfunction maybeAsString(node) {\r\n    // Unwrap fragments\r\n    if (React__namespace.isValidElement(node) && node.type === React__namespace.Fragment) {\r\n        return maybeAsString(node.props.children);\r\n    }\r\n    if (typeof node === \"string\") {\r\n        return node;\r\n    }\r\n    if (Array.isArray(node) && node.length === 1 && typeof node[0] === \"string\") {\r\n        return node[0];\r\n    }\r\n    return undefined;\r\n}\n\nvar listeners = [];\r\nvar queries = {};\r\nfunction matchScreenVariants() {\r\n    if (!isBrowser) {\r\n        return [];\r\n    }\r\n    return Object.entries(queries)\r\n        .filter(function (_a) {\r\n        var query = _a[1];\r\n        return window.matchMedia(query).matches;\r\n    })\r\n        .map(function (_a) {\r\n        var name = _a[0];\r\n        return name;\r\n    });\r\n}\r\n// undefined if screen variants have never been calculated\r\nvar curScreenVariants = undefined;\r\nfunction recalculateScreenVariants() {\r\n    var screenVariant = matchScreenVariants();\r\n    if (!curScreenVariants ||\r\n        screenVariant.join(\"\") !== curScreenVariants.join(\"\")) {\r\n        curScreenVariants = screenVariant;\r\n        _reactDom__default['default'].unstable_batchedUpdates(function () {\r\n            return listeners.forEach(function (listener) { return listener(); });\r\n        });\r\n    }\r\n}\r\nfunction ensureInitCurScreenVariants() {\r\n    // Initializes curScreenVariants if it hadn't been before. Note that this must\r\n    // be called from within an effect.\r\n    if (curScreenVariants === undefined) {\r\n        curScreenVariants = matchScreenVariants();\r\n    }\r\n}\r\nif (isBrowser) {\r\n    window.addEventListener(\"resize\", recalculateScreenVariants);\r\n}\r\nfunction createUseScreenVariants(isMulti, screenQueries) {\r\n    Object.assign(queries, screenQueries);\r\n    curScreenVariants = undefined;\r\n    return function () {\r\n        // It is important that upon first render, we return [] or undefined, because\r\n        // that is what SSR will use, and the client must match.  In an effect (which\r\n        // only happens on the client), we then actually ask for the real screen variant\r\n        // and, if different from [] or undefined, forces a re-render.\r\n        var _a = React__namespace.useState(), updateState = _a[1];\r\n        var lastScreenVariantsRef = React__namespace.useRef(curScreenVariants || []);\r\n        // We do useLayoutEffect instead of useEffect to immediately\r\n        // register our forceUpdate. This ensures that if there was\r\n        // a window resize event between render and effects, that the\r\n        // listener will be registered in time\r\n        useIsomorphicLayoutEffect(function () {\r\n            var updateIfChanged = function () {\r\n                if (curScreenVariants &&\r\n                    lastScreenVariantsRef.current.join(\"\") !== curScreenVariants.join(\"\")) {\r\n                    lastScreenVariantsRef.current = curScreenVariants;\r\n                    // Force update\r\n                    updateState({});\r\n                }\r\n            };\r\n            // Listeners are invoked whenever the window is resized\r\n            listeners.push(updateIfChanged);\r\n            // Initialize the curScreenVariants for the first time.  We don't need\r\n            // to invoke the listeners here because all components will already\r\n            // have this effect running and will re-render if the real screen\r\n            // variant is non-empty.\r\n            ensureInitCurScreenVariants();\r\n            // Now, if the curScreenVariants differs from what we returned last,\r\n            // then force a re-render.\r\n            updateIfChanged();\r\n            return function () {\r\n                // Remove our listener on unmount\r\n                listeners.splice(listeners.indexOf(updateIfChanged), 1);\r\n            };\r\n        }, []);\r\n        if (isMulti) {\r\n            return curScreenVariants || [];\r\n        }\r\n        else if (curScreenVariants) {\r\n            return curScreenVariants[curScreenVariants.length - 1];\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n}\n\n// Utilities used by generated code\r\nvar classNames = classNames$1;\n\nexports.PlasmicRootProvider = PlasmicRootProvider;\nexports.classNames = classNames;\nexports.createPlasmicElementProxy = createPlasmicElementProxy;\nexports.createUseScreenVariants = createUseScreenVariants;\nexports.deriveRenderOpts = deriveRenderOpts;\nexports.renderPlasmicSlot = renderPlasmicSlot;\n","imports":["react","react-dom"],"type":"code"},{"fileName":"render__4DP6LCsF5DAEDS.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar Head = require('next/head');\nvar index = require('./index-6cf1d5e9.js');\nvar comp__wk5D0GHQp4 = require('./comp__wk5D0GHQp4.js');\nvar comp__l3_Kdwbw0M = require('./comp__l3_Kdwbw0M.js');\nvar comp__NZJHqVnmkt = require('./comp__NZJHqVnmkt.js');\nvar comp__1MrXClCMmd = require('./comp__1MrXClCMmd.js');\nvar comp__4KW2M5C9yK = require('./comp__4KW2M5C9yK.js');\nvar comp__03lXAatnPJTzGx = require('./comp__03lXAatnPJTzGx.js');\nvar comp__O0lNhygQRW = require('./comp__O0lNhygQRW.js');\nvar comp__cLjzGEC88 = require('./comp__cLjzGEC-88.js');\nvar comp__6uQrDgkoZk = require('./comp__6uQrDgkoZk.js');\nrequire('react-dom');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar Head__default = /*#__PURE__*/_interopDefaultLegacy(Head);\n\nconst _jsxFileName$1 = \"/tmp/tmp-36-msYReFMDyGTN/icon__-2bhCKc3vqdFx3.tsx\";\n\n    \n\n\n\n    function OvalIcon(props) {\n      const {\n        className,\n        style,\n        title,\n        ...restProps\n      } = props;\n      return (\n        React__default['default'].createElement('svg', {\n          xmlns: \"http://www.w3.org/2000/svg\", fill: \"none\", viewBox: \"0 0 41 41\", height: \"1em\", width: \"1em\", style: {\n        fill: \"currentcolor\",\n\n        ...style || {}\n      }, className: index.classNames(\"plasmic-default__svg\", className),\n          ...restProps, __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 21}}\n        \n          , title && React__default['default'].createElement('title', {__self: this, __source: {fileName: _jsxFileName$1, lineNumber: 29}}, title)\n\n\n\n    , React__default['default'].createElement('circle', {\n      cx: \"20.5\", cy: \"20.5\", r: \"20.5\", fill: \"currentColor\", __self: this, __source: {fileName: _jsxFileName$1, lineNumber: 33}}\n    \n\n    )\n\n\n\n        )\n      );\n    }\n    /* prettier-ignore-end */\n\nconst _jsxFileName = \"/tmp/tmp-36-msYReFMDyGTN/render__4DP6LCsF5DAEDS.tsx\";\n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicHomePage__VariantProps = new Array();\n  \n\n    \n    \n\n    const PlasmicHomePage__ArgProps = new Array();\n  \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n\n    \n\n    \n    function PlasmicHomePage__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, args, overrides, forNode, dataFetches} = props;\n\n      \n\n      \n\n      \n      \n      return (\n        index.createPlasmicElementProxy(React__namespace.Fragment, {__self: this, __source: {fileName: _jsxFileName, lineNumber: 101}}\n\n      , index.createPlasmicElementProxy(Head__default['default'], {__self: this, __source: {fileName: _jsxFileName, lineNumber: 103}}\n        , index.createPlasmicElementProxy('title', { key: \"title\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 104}}, \"Test Bench\")\n        , index.createPlasmicElementProxy('meta', { key: \"og:title\", property: \"og:title\", content: \"Test Bench\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 105}} )\n        , index.createPlasmicElementProxy('meta', { key: \"description\", name: \"description\", property: \"og:description\", content: \"\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 106}} )\n\n      )\n\n\n      , index.createPlasmicElementProxy('style', {__self: this, __source: {fileName: _jsxFileName, lineNumber: 111}}, `\n        body {\n          margin: 0;\n        }\n      `)\n\n\n      , index.createPlasmicElementProxy('div', { className: \"plasmic_page_wrapper\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 118}}\n\n  , index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_mHWcK7NZcRAyb8v8MxSPJd\", \"HomePage__root__eug8X\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 120}}\n    \n    \n          ,  (\n  index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root2,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"HomePage__root2__xdwp7\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 131}}\n    \n    \n\n  , index.createPlasmicElementProxy(comp__wk5D0GHQp4['default'], {\n    \n    \n    'data-plasmic-override': overrides.muiTheme,\n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomePage__muiTheme___4CQvT\"),\ntheme: {\"palette\":{\"common\":{\"black\":\"#000\",\"white\":\"#fff\"},\"background\":{\"paper\":\"#fff\",\"default\":\"#fafafa\"},\"primary\":{\"light\":\"#7986cb\",\"main\":\"#3f51b5\",\"dark\":\"#303f9f\",\"contrastText\":\"#fff\"},\"secondary\":{\"light\":\"#ff4081\",\"main\":\"#f50057\",\"dark\":\"#c51162\",\"contrastText\":\"#fff\"},\"error\":{\"light\":\"#e57373\",\"main\":\"#f44336\",\"dark\":\"#d32f2f\",\"contrastText\":\"#fff\"},\"text\":{\"primary\":\"rgba(0, 0, 0, 0.87)\",\"secondary\":\"rgba(0, 0, 0, 0.54)\",\"disabled\":\"rgba(0, 0, 0, 0.38)\",\"hint\":\"rgba(0, 0, 0, 0.38)\"}}}, __self: this, __source: {fileName: _jsxFileName, lineNumber: 142}}\n    \n    \n\n  , index.createPlasmicElementProxy(comp__l3_Kdwbw0M['default'], {\n    \n    \n    'data-plasmic-override': overrides.muiNavProvider,\n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomePage__muiNavProvider__sJvO0\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 154}}\n    \n    \n\n  , index.createPlasmicElementProxy(comp__NZJHqVnmkt['default'], {\n    \n    \n    'data-plasmic-override': overrides.testNav,\n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomePage__testNav__wc6UW\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 165}}\n    \n    \n\n  , index.createPlasmicElementProxy(comp__1MrXClCMmd['default'], {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomePage__muiNavTab___8W7K\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 176}}\n    \n    \n          ,  \"OpenSEA SDK\" \n        )\n\n\n  , index.createPlasmicElementProxy(comp__1MrXClCMmd['default'], {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomePage__muiNavTab__apsVe\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 190}}\n    \n    \n          ,  \"Mui Buttons\" \n        )\n\n\n  , index.createPlasmicElementProxy(comp__1MrXClCMmd['default'], {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomePage__muiNavTab__gPqas\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 204}}\n    \n    \n          ,  \"Bit Slider\" \n        )\n\n\n  , index.createPlasmicElementProxy(comp__1MrXClCMmd['default'], {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomePage__muiNavTab___63GSv\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 218}}\n    \n    \n          ,  \"Collapse\" \n        )\n\n        )\n\n\n  , index.createPlasmicElementProxy(comp__4KW2M5C9yK['default'], {\n    \n    \n    'data-plasmic-override': overrides.openSeaSdk,\n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomePage__openSeaSdk__pXpiU\"),\nindex: (1 ), __self: this, __source: {fileName: _jsxFileName, lineNumber: 234}}\n    \n    \n\n  , index.createPlasmicElementProxy(comp__03lXAatnPJTzGx['default'], {\n    \n    \n    'data-plasmic-override': overrides.muiButton,\n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomePage__muiButton__pcu7P\"),\ncolor: (\"primary\" ),\ntheme: {\"palette\":{\"common\":{\"black\":\"#000\",\"white\":\"#fff\"},\"background\":{\"paper\":\"#fff\",\"default\":\"#fafafa\"},\"primary\":{\"light\":\"rgba(44, 252, 15, 1)\",\"main\":\"rgba(62, 242, 11, 1)\",\"dark\":\"rgba(41, 240, 23, 0.33)\",\"contrastText\":\"#fff\"},\"secondary\":{\"light\":\"rgba(215, 240, 31, 1)\",\"main\":\"rgba(228, 216, 15, 1)\",\"dark\":\"rgba(219, 215, 20, 1)\",\"contrastText\":\"#fff\"},\"error\":{\"light\":\"#e57373\",\"main\":\"#f44336\",\"dark\":\"#d32f2f\",\"contrastText\":\"#fff\"},\"text\":{\"primary\":\"rgba(0, 0, 0, 0.87)\",\"secondary\":\"rgba(0, 0, 0, 0.54)\",\"disabled\":\"rgba(0, 0, 0, 0.38)\",\"hint\":\"rgba(0, 0, 0, 0.38)\"}}},\nvariant: (\"contained\" ), __self: this, __source: {fileName: _jsxFileName, lineNumber: 246}}\n    \n    \n          ,  \"Test Bitch!\" \n        )\n\n\n  , index.createPlasmicElementProxy(comp__O0lNhygQRW['default'], {\n    \n    \n    'data-plasmic-override': overrides.nftContext,\n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomePage__nftContext___1RtW5\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 263}}\n    \n    \n\n  , index.createPlasmicElementProxy(comp__cLjzGEC88['default'], {\n    \n    \n    'data-plasmic-override': overrides.nftConsumer,\n    \n    \n    \n    className: index.classNames(\"__wab_instance\", \"HomePage__nftConsumer__oYknZ\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 274}}\n    \n    )\n\n\n  , index.createPlasmicElementProxy(comp__6uQrDgkoZk['default'], {\n    \n    \n    'data-plasmic-override': overrides.nftConsumerWallet,\n    \n    \n    \n    accountBalance: false,\naccountLogin: \n  index.createPlasmicElementProxy(OvalIcon, {\n    \n    \n    'data-plasmic-override': overrides.svg,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__svg\", \"HomePage__svg__iDTmD\"),\nrole: \"img\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 295}}\n    \n    )\n  ,\nclassName: index.classNames(\"__wab_instance\", \"HomePage__nftConsumerWallet__cjnR4\"),\nlogin: true,\nstateLoggedIn: false,\nstateLoggingIn: false, __self: this, __source: {fileName: _jsxFileName, lineNumber: 286}}\n    \n    )\n\n        )\n\n        )\n\n        )\n\n        )\n\n        )\n  )  \n        )\n\n      )\n\n  )\n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root: [\"root\", \"root2\", \"muiTheme\", \"muiNavProvider\", \"testNav\", \"openSeaSdk\", \"muiButton\", \"nftContext\", \"nftConsumer\", \"nftConsumerWallet\", \"svg\"],\nroot2: [\"root2\", \"muiTheme\", \"muiNavProvider\", \"testNav\", \"openSeaSdk\", \"muiButton\", \"nftContext\", \"nftConsumer\", \"nftConsumerWallet\", \"svg\"],\nmuiTheme: [\"muiTheme\", \"muiNavProvider\", \"testNav\", \"openSeaSdk\", \"muiButton\", \"nftContext\", \"nftConsumer\", \"nftConsumerWallet\", \"svg\"],\nmuiNavProvider: [\"muiNavProvider\", \"testNav\", \"openSeaSdk\", \"muiButton\", \"nftContext\", \"nftConsumer\", \"nftConsumerWallet\", \"svg\"],\ntestNav: [\"testNav\"],\nopenSeaSdk: [\"openSeaSdk\", \"muiButton\", \"nftContext\", \"nftConsumer\", \"nftConsumerWallet\", \"svg\"],\nmuiButton: [\"muiButton\"],\nnftContext: [\"nftContext\", \"nftConsumer\", \"nftConsumerWallet\", \"svg\"],\nnftConsumer: [\"nftConsumer\"],\nnftConsumerWallet: [\"nftConsumerWallet\", \"svg\"],\nsvg: [\"svg\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHomePage__ArgProps,\n          internalVariantPropNames: PlasmicHomePage__VariantProps,\n        });\n        \n        const {dataFetches} = props;\n\n        return PlasmicHomePage__RenderFunc({\n          variants, args, overrides, dataFetches, forNode: nodeName\n        });\n      };\n      if (nodeName === \"root\") {\n        func.displayName = \"PlasmicHomePage\";\n      } else {\n        func.displayName = `PlasmicHomePage.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicHomePage = Object.assign(\n      // Top-level PlasmicHomePage renders the root element\n      makeNodeComponent(\"root\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicHomePage\n        internalVariantProps: PlasmicHomePage__VariantProps,\n        internalArgProps: PlasmicHomePage__ArgProps,\n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nexports.PlasmicHomePage = PlasmicHomePage;\nexports.PlasmicHomePage__ArgProps = PlasmicHomePage__ArgProps;\nexports.PlasmicHomePage__VariantProps = PlasmicHomePage__VariantProps;\nexports.default = PlasmicHomePage;\n","imports":["react","next/head","index-6cf1d5e9.js","comp__wk5D0GHQp4.js","comp__l3_Kdwbw0M.js","comp__NZJHqVnmkt.js","comp__1MrXClCMmd.js","comp__4KW2M5C9yK.js","comp__03lXAatnPJTzGx.js","comp__O0lNhygQRW.js","comp__cLjzGEC-88.js","comp__6uQrDgkoZk.js","react-dom","css__4DP6LCsF5DAEDS.css"],"type":"code"},{"fileName":"root-provider.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index = require('./index-6cf1d5e9.js');\nrequire('react');\nrequire('react-dom');\n\n\n\nexports.default = index.PlasmicRootProvider;\n","imports":["index-6cf1d5e9.js","react","react-dom"],"type":"code"}],"external":["next/head","react","react-dom"],"components":[{"id":"03lXAatnPJTzGx","usedComponents":[],"projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"MuiButton","renderFile":"render__03lXAatnPJTzGx.js","skeletonFile":"comp__03lXAatnPJTzGx.js","cssFile":"css__03lXAatnPJTzGx.css","isPage":false,"entry":"comp__03lXAatnPJTzGx.js","isCode":true},{"id":"1MrXClCMmd","usedComponents":[],"projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"MuiNavTab","renderFile":"render__1MrXClCMmd.js","skeletonFile":"comp__1MrXClCMmd.js","cssFile":"css__1MrXClCMmd.css","isPage":false,"entry":"comp__1MrXClCMmd.js","isCode":true},{"id":"4DP6LCsF5DAEDS","usedComponents":["wk5D0GHQp4","l3_Kdwbw0M","NZJHqVnmkt","1MrXClCMmd","4KW2M5C9yK","03lXAatnPJTzGx","O0lNhygQRW","cLjzGEC-88","6uQrDgkoZk"],"projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"HomePage","renderFile":"render__4DP6LCsF5DAEDS.js","skeletonFile":"comp__4DP6LCsF5DAEDS.js","cssFile":"css__4DP6LCsF5DAEDS.css","path":"/","isPage":true,"entry":"render__4DP6LCsF5DAEDS.js","isCode":false},{"id":"4KW2M5C9yK","usedComponents":[],"projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"MuiNavPanel","renderFile":"render__4KW2M5C9yK.js","skeletonFile":"comp__4KW2M5C9yK.js","cssFile":"css__4KW2M5C9yK.css","isPage":false,"entry":"comp__4KW2M5C9yK.js","isCode":true},{"id":"6uQrDgkoZk","usedComponents":[],"projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"NftConsumerWallet","renderFile":"render__6uQrDgkoZk.js","skeletonFile":"comp__6uQrDgkoZk.js","cssFile":"css__6uQrDgkoZk.css","isPage":false,"entry":"comp__6uQrDgkoZk.js","isCode":true},{"id":"NZJHqVnmkt","usedComponents":[],"projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"MuiSubNav","renderFile":"render__NZJHqVnmkt.js","skeletonFile":"comp__NZJHqVnmkt.js","cssFile":"css__NZJHqVnmkt.css","isPage":false,"entry":"comp__NZJHqVnmkt.js","isCode":true},{"id":"O0lNhygQRW","usedComponents":[],"projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"NftContext","renderFile":"render__O0lNhygQRW.js","skeletonFile":"comp__O0lNhygQRW.js","cssFile":"css__O0lNhygQRW.css","isPage":false,"entry":"comp__O0lNhygQRW.js","isCode":true},{"id":"cLjzGEC-88","usedComponents":[],"projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"NftConsumer","renderFile":"render__cLjzGEC-88.js","skeletonFile":"comp__cLjzGEC-88.js","cssFile":"css__cLjzGEC-88.css","isPage":false,"entry":"comp__cLjzGEC-88.js","isCode":true},{"id":"l3_Kdwbw0M","usedComponents":[],"projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"MuiNavProvider","renderFile":"render__l3_Kdwbw0M.js","skeletonFile":"comp__l3_Kdwbw0M.js","cssFile":"css__l3_Kdwbw0M.css","isPage":false,"entry":"comp__l3_Kdwbw0M.js","isCode":true},{"id":"wk5D0GHQp4","usedComponents":[],"projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"MuiTheme","renderFile":"render__wk5D0GHQp4.js","skeletonFile":"comp__wk5D0GHQp4.js","cssFile":"css__wk5D0GHQp4.css","isPage":false,"entry":"comp__wk5D0GHQp4.js","isCode":true}],"globalGroups":[{"id":"_6zkQeuWE6veL1","projectId":"mHWcK7NZcRAyb8v8MxSPJd","name":"Screen","contextFile":"global___6zkQeuWE6veL1.js","type":"global-screen","useName":"useScreen"}],"projects":[{"id":"mHWcK7NZcRAyb8v8MxSPJd","name":"Test Bench","version":"latest","remoteFonts":[{"url":"https://fonts.googleapis.com/css2?family=Inter%3Aital%2Cwght%400%2C400&display=swap"}]}]},"remoteFontUrls":["https://fonts.googleapis.com/css2?family=Inter%3Aital%2Cwght%400%2C400&display=swap"]}},"__N_SSG":true}